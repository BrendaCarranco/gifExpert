{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","category","console","log","type","value","placeholder","onChange","target","GifGridItem","id","url","title","className","src","alt","getGifs","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"+LAkCeA,EA/BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEHC,mBAAS,IAFN,mBAEhCC,EAFgC,KAEpBC,EAFoB,KAavC,OACI,6BACI,0BAAMC,SAXO,SAAAC,GACjBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAQ,OAAKP,GAAL,mBAAoBO,OAC1CC,QAAQC,IAAI,YAEhBR,EAAc,MAMN,2BACIS,KAAK,OACLC,MAAOX,EACPY,YAAY,SACZC,SAAU,SAAAV,GAAC,OAAIF,EAAcE,EAAEW,OAAOH,aCX3CI,EAVK,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,IAAKC,EAAY,EAAZA,MAE5B,OACI,yBAAKC,UAAU,0CACX,yBAAKC,IAAKH,EAAKI,IAAKH,IACpB,2BAAIA,K,uBCNHI,EAAO,uCAAG,WAAOf,GAAP,uBAAAgB,EAAA,6DACbN,EADa,iDACmCO,UAAUjB,GAD7C,+DAEAkB,MAAMR,GAFN,cAEbS,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHf,GAAIe,EAAIf,GACRE,MAAOa,EAAIb,MACXD,IAAKc,EAAIC,OAAOC,iBAAiBhB,QATtB,kBAaZY,GAbY,4CAAH,sDCmCLK,EAhCC,SAAC,GAAkB,IAAhB3B,EAAe,EAAfA,SAAe,ECAN,SAACA,GAAc,IAAD,EACZR,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAgBtC,OAVAC,qBAAU,WACNhB,EAAQf,GACHgC,MAAK,SAAAC,GACFH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAGtB,CAAC5B,IAEG6B,EDb2BK,CAAalC,GAAjCyB,EAHgB,EAGtBJ,KAAcO,EAHQ,EAGRA,QAOtB,OACI,6BACI,wBAAIhB,UAAU,qCAAqCZ,GAE/C4B,GAAW,uBAAGhB,UAAU,oCAAb,cAGf,yBAAKA,UAAU,aACX,4BAEQa,EAAOF,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACIW,IAAKX,EAAIf,IACLe,WEHrBY,EApBM,WAAO,IAAD,EAEa5C,mBAAS,CAAC,cAFvB,mBAEhB6C,EAFgB,KAEJ9C,EAFI,KAIvB,OACI,6BACI,8CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ8C,EAAWd,KAAI,SAAAvB,GAAQ,OACnB,kBAAC,EAAD,CAASmC,IAAKnC,EACVA,SAAUA,UCXtCsC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.7705bdc3.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        if (inputValue.trim().length > 2) {\n            setCategories(category => [inputValue, ...category]);\n            console.log('Submit!');\n        }\n        setInputValue('');\n    };\n\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <input\n                    type='text'\n                    value={inputValue}\n                    placeholder='Buscar'\n                    onChange={e => setInputValue(e.target.value)}\n                />\n            </form>\n        </div>\n    );\n};\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n};\n\nexport default AddCategory;\n","import React from 'react';\n\nconst GifGridItem = ({ id, url, title }) => {\n\n    return (\n        <div className='card animate__animated animate__fadeIn'>\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    );\n};\n\nexport default GifGridItem;\n","\nexport const getGifs = async (category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=oppLP5WcO8vMadNhWaVUNZo6Yz97FWSv`;\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n\n    const gifs = data.map(img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images.downsized_medium.url\n        };\n    });\n\n    return gifs;\n};","import React/* , { useState, useEffect } */ from 'react';\nimport GifGridItem from './components/GifGridItem';\nimport { useFetchGifs } from './hooks/useFetchGifs';\n\nconst GifGrid = ({ category }) => {\n\n\n    const { data: images, loading } = useFetchGifs(category);\n\n    /*     useEffect(() => {\n            getGifs(category)\n                .then(setImages); //desestructuración, es lo mismo que then(img => setImages(img))\n        }, [category]); Este ahora es un ustum hook :D */\n\n    return (\n        <div>\n            <h3 className='animate__animated animate__fadeIn'>{category}</h3>\n            {\n                loading && <p className='animate__animated animate__flash'>Loading...</p>\n            }\n\n            <div className='card-grid'>\n                <ol>\n                    {\n                        images.map(img => (\n                            <GifGridItem\n                                key={img.id}\n                                {...img} /> //Esto es desestructuración iwual a img = {img} ;)\n                        ))\n                    }\n                </ol>\n            </div>\n        </div>\n    );\n};\n\nexport default GifGrid;\n","//Custom hook\nimport { useState, useEffect } from 'react';\nimport { getGifs } from '../helpers/getGifs';\n\nexport const useFetchGifs = (category) => {\n    const [state, setState] = useState({\n        data: [],\n        loading: true,\n    });\n\n    useEffect(() => { //Effect no puede ser async!\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                });\n            });\n    }, [category]); //Ejecutar cuando cambia la categoría\n\n    return state;\n};","import React, { useState } from 'react';\nimport AddCategory from './components/AddCategory';\nimport GifGrid from './GifGrid';\n\nconst GifExpertApp = () => {\n\n    const [categories, setCategories] = useState(['One Punch']);\n\n    return (\n        <div>\n            <h2>Gif Expert App</h2>\n            <AddCategory setCategories={setCategories} />\n            <hr />\n            <ol>\n                {\n                    categories.map(category => (\n                        <GifGrid key={category}\n                            category={category} />))\n                }\n            </ol>\n        </div>\n    );\n};\n\nexport default GifExpertApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}